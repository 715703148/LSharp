
//  Microsoft (R) .NET Framework IL Disassembler.  Version 3.5.30729.1



// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x54ab729b
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2102
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x0b
// Minor linker version:           0x00
// Size of code:                   0x00000a00
// Size of init.data:              0x00000600
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x000027fe
// Base of code:                   0x00002000
// Base of data:                   0x00004000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x00008000
// Size of headers:                0x00000200
// Checksum:                       0x00000000
// Subsystem:                      0x00000003
// DLL characteristics:            0x00008540
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x000027ac [0x0000004f] address [size] of Import Directory:          
// 0x00004000 [0x000002d8] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00000000 [0x00000000] address [size] of Security Directory:        
// 0x00006000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00002674 [0x0000001c] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00000804 Virtual Size
//              0x00002000 Virtual Address
//              0x00000a00 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x000002d8 Virtual Size
//              0x00004000 Virtual Address
//              0x00000400 Size of Raw Data
//              0x00000c00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00006000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00001000 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00002000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000800
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x000027ee Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// 没有数据。

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002084 [0x000005f0] address [size] of Metadata Directory:        
// Flags:                              0x00000001
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x00000000 [0x00000000] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x000001e0 Size
//              '#~' Name
//    Stream 2:
//              0x0000024c Offset
//              0x00000278 Size
//              '#Strings' Name
//    Stream 3:
//              0x000004c4 Offset
//              0x00000018 Size
//              '#US' Name
//    Stream 4:
//              0x000004dc Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x000004ec Offset
//              0x00000104 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000000900021447 MaskValid
//      0x000016003325fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// 没有数据。

// File size            : 4608
// PE header size       : 512 (496 used)    (11.11%)
// PE additional info   : 927               (20.12%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 1.56%)
// CLR meta-data size  : 1520               (32.99%)
// CLR additional info : 0                  ( 0.00%)
// CLR method headers  : 13                 ( 0.28%)
// Managed code         : 39                ( 0.85%)
// Data                 : 1536              (33.33%)
// Unaccounted          : -11               (-0.24%)

// Num.of PE sections   : 3
//   .text    - 2560
//   .rsrc    - 1024
//   .reloc   - 512

// CLR meta-data size  : 1520
//   Module        -    1 (10 bytes)
//   TypeDef       -    2 (28 bytes)      0 interfaces, 0 explicit layout
//   TypeRef       -   19 (114 bytes)
//   MethodDef     -    2 (28 bytes)      0 abstract, 0 native, 2 bodies
//   MemberRef     -   18 (108 bytes)
//   CustomAttribute-   14 (84 bytes)
//   StandAloneSig -    1 (2 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    1 (20 bytes)
//   Strings       -   630 bytes
//   Blobs         -   260 bytes
//   UserStrings   -    24 bytes
//   Guids         -    16 bytes
//   Uncategorized -   174 bytes

// CLR method headers : 13
//   Num.of method bodies  - 2
//   Num.of fat headers    - 1
//   Num.of tiny headers   - 1

// Managed code : 39
//   Ave method size - 19
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class Class1                         (public) (auto) (ansi) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly /*20000001*/ t01
{
  .custom /*0C000001:0A000001*/ instance void [mscorlib/*23000001*/]System.Runtime.Versioning.TargetFrameworkAttribute/*01000002*/::.ctor(string) /* 0A000001 */ = ( 01 00 1A 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                                     2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 01 00 54   // ,Version=v4.0..T
                                                                                                                                                                     0E 14 46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C   // ..FrameworkDispl
                                                                                                                                                                     61 79 4E 61 6D 65 10 2E 4E 45 54 20 46 72 61 6D   // ayName..NET Fram
                                                                                                                                                                     65 77 6F 72 6B 20 34 )                            // ework 4
  .custom /*0C000002:0A000002*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyTitleAttribute/*01000003*/::.ctor(string) /* 0A000002 */ = ( 01 00 03 74 30 31 00 00 )                         // ...t01..
  .custom /*0C000003:0A000003*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000004*/::.ctor(string) /* 0A000003 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000004:0A000004*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyConfigurationAttribute/*01000005*/::.ctor(string) /* 0A000004 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000005:0A000005*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000006*/::.ctor(string) /* 0A000005 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000006:0A000006*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyProductAttribute/*01000007*/::.ctor(string) /* 0A000006 */ = ( 01 00 03 74 30 31 00 00 )                         // ...t01..
  .custom /*0C000007:0A000007*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000008*/::.ctor(string) /* 0A000007 */ = ( 01 00 12 43 6F 70 79 72 69 67 68 74 20 C2 A9 20   // ...Copyright .. 
                                                                                                                                                               20 32 30 31 35 00 00 )                            //  2015..
  .custom /*0C000008:0A000008*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyTrademarkAttribute/*01000009*/::.ctor(string) /* 0A000008 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000009:0A00000A*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*0100000B*/::.ctor(bool) /* 0A00000A */ = ( 01 00 00 00 00 ) 
  .custom /*0C00000A:0A00000B*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.GuidAttribute/*0100000C*/::.ctor(string) /* 0A00000B */ = ( 01 00 24 61 64 34 38 66 65 36 33 2D 31 62 61 31   // ..$ad48fe63-1ba1
                                                                                                                                                               2D 34 39 38 62 2D 38 64 31 64 2D 31 36 39 62 64   // -498b-8d1d-169bd
                                                                                                                                                               35 66 62 61 38 32 34 00 00 )                      // 5fba824..
  .custom /*0C00000B:0A00000D*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100000E*/::.ctor(string) /* 0A00000D */ = ( 01 00 07 31 2E 30 2E 30 2E 30 00 00 )             // ...1.0.0.0..

  // --- 下列自定义属性会自动添加，不要取消注释 -------
  //  .custom /*0C00000C:0A00000E*/ instance void [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*0100000F*/::.ctor(valuetype [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*0100000F*//DebuggingModes/*01000010*/) /* 0A00000E */ = ( 01 00 07 01 00 00 00 00 ) 

  .custom /*0C00000D:0A00000F*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000011*/::.ctor(int32) /* 0A00000F */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C00000E:0A000010*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000012*/::.ctor() /* 0A000010 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                          63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module t01.dll
// MVID: {1891C572-B2A2-4292-A630-154763815231}
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x01090000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public auto ansi beforefieldinit t01.Class1
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000001*/ private hidebysig 
          instance void  Do001() cil managed
  // SIG: 20 00 01
  {
    // 方法在 RVA 0x2050 处开始
    // 代码大小       32 (0x20)
    .maxstack  2
    .locals /*11000001*/ init ([0] int32 i,
             [1] bool CS$4$0000)
    .language '{3F5162F8-07C6-11D3-9053-00C04FA302A1}', '{994B45C4-E6E9-11D2-903F-00C04FA302A1}', '{5A869D0B-6611-11D3-BD2A-0000F80849BD}'
// Source File 'e:\github\LSharp\t01\Class1.cs' 
    .line 11,11 : 9,10 'e:\\github\\LSharp\\t01\\Class1.cs'
//000011:         {
    IL_0000:  /* 00   |                  */ nop
    .line 12,12 : 17,25 ''
//000012:             for(int i=0;i<10;i++)
    IL_0001:  /* 16   |                  */ ldc.i4.0
    IL_0002:  /* 0A   |                  */ stloc.0
    IL_0003:  /* 2B   | 11               */ br.s       IL_0016

    .line 13,13 : 13,14 ''
//000013:             {
    IL_0005:  /* 00   |                  */ nop
    .line 14,14 : 17,48 ''
//000014:                 Console.WriteLine("hi there.");
    IL_0006:  /* 72   | (70)000001       */ ldstr      "hi there." /* 70000001 */
    IL_000b:  /* 28   | (0A)000011       */ call       void [mscorlib/*23000001*/]System.Console/*01000013*/::WriteLine(string) /* 0A000011 */
    IL_0010:  /* 00   |                  */ nop
    .line 15,15 : 13,14 ''
//000015:             }
    IL_0011:  /* 00   |                  */ nop
    .line 12,12 : 30,33 ''
//000012:             for(int i=0;i<10;i++)
    IL_0012:  /* 06   |                  */ ldloc.0
    IL_0013:  /* 17   |                  */ ldc.i4.1
    IL_0014:  /* 58   |                  */ add
    IL_0015:  /* 0A   |                  */ stloc.0
    .line 12,12 : 25,29 ''
    IL_0016:  /* 06   |                  */ ldloc.0
    IL_0017:  /* 1F   | 0A               */ ldc.i4.s   10
    IL_0019:  /* FE04 |                  */ clt
    IL_001b:  /* 0B   |                  */ stloc.1
    IL_001c:  /* 07   |                  */ ldloc.1
    IL_001d:  /* 2D   | E6               */ brtrue.s   IL_0005

    .line 16,16 : 9,10 ''
//000013:             {
//000014:                 Console.WriteLine("hi there.");
//000015:             }
//000016:         }
    IL_001f:  /* 2A   |                  */ ret
  } // end of method Class1::Do001

  .method /*06000002*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // 方法在 RVA 0x207c 处开始
    // 代码大小       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [mscorlib/*23000001*/]System.Object/*01000001*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method Class1::.ctor

} // end of class t01.Class1


// =============================================================

// *********** 反汇编完成 ***********************
// 警告: 创建了 Win32 资源文件 E:\github\LSharp\t01_d.res
